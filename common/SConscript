Import('env', 'envCython', 'arch')

common_libs = [
  'params.cc',
  'statlog.cc',
  'swaglog.cc',
  'util.cc',
  'i2c.cc',
  'watchdog.cc',
  'ratekeeper.cc'
]

if arch != "Darwin":
  common_libs.append('gpio.cc')

_common = env.Library('common', common_libs, LIBS=["json11", "lmdb"])

Export('_common')

files = [
  'clutil.cc',
]

_gpucommon = env.Library('gpucommon', files)
Export('_common', '_gpucommon')

if GetOption('test'):
  env.Program('tests/test_util', ['tests/test_util.cc'], LIBS=[_common])
  env.Program('tests/test_swaglog', ['tests/test_swaglog.cc'], LIBS=[_common, 'json11', 'zmq', 'pthread', 'lmdb'])

# Cython bindings
envCython.Program('clock.so', 'clock.pyx')
params_python = envCython.Program('params_pyx.so', 'params_pyx.pyx', LIBS=envCython['LIBS'] + [_common, 'zmq', 'json11', 'lmdb'])

SConscript([
  'kalman/SConscript',
  'transformations/SConscript'  
])

Import('simple_kalman_python', 'transformations_python')
common_python = [params_python, simple_kalman_python, transformations_python]

Export('common_python')
